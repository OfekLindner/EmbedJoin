from util import *
from statistics import mean

def create_input(input_file_path):
    input_file = open(input_file_path, 'w')
    input_string = 'CCTGCCGATGAGCATGTTGGTGTCCCTGCTCTTTTGGTGAGGTGATAGCAGCTTCTGTGCATGGCCTCTTTCTGTGTCTCACTCTAGGGTCCCCAGTGTGTGATCAGGCTGCCGTGTGCCTGCTTGTCTGTCTGTCTGTGTGTGCACACATCTGCCTCTTTGCCTCTCTGAATCTCTCTCCTTCCTTTTCCCATTCTCTCTCATTATTCCATATTCCCTCTAGATTTGGTCCCCATGTTGCAACACAACTGTGTTTGTGTGTCTCACCCTGGGTCACATCTGTGGGTTCCTCTTTACTTGGAGCCTTTTCTCCTTCTGATTCTCATTCACTTGGTGACTTCTCACCCCTGTGCATCCACTTGCTCTGCCATCCATTCATCCACCCACTTTGGACATTGAGCATCTTCCAGGAGCTGGACAGCTCCCATACGTGAGTCAGTGTGTGTGCCCCCTCTGTGTACTGCCCCTGGGTCTCTGCCTGTCTGTGGGCCTGTCTCTCCGAGCCCCCTTCTCCCACCCCTGCCTTCATCCTCCTCAGCTGCACTTCCTTCTGCTCTCCAGAGGAAACTTATGGAATTTGCTCTGTCCACGCATCATTCCTGCTGTGTGTGTGTGTACTTGTGTGTACGTGTAAGTGGGTCATCTCTTTCTGAGGCATGGTCAGGGTTGGCTTCCACCCTCTGTCACTCTCATGGACATTTCATCTGCTTGCCTCTCCATCCAGCCATCTGTAGCATGCTCAGCTAACTCTGGGGCAGGGTCTGCCTGTCTGGTCTGTCTTCCTTTCCTTCTCTTTCTCTCACTCCTCACACACTCCCCGGATGAACTCATCCCCTGCCCTCTGTGCTGACATCTCCCTAACTGCTCCTGCAACCAAGACTCCCCACCTTTTTCTCTTCTTCGCAAGCCACTAGATTCCTCCCCAGGAGAATCCAACCCATTGCGTCATCTTCACACCCTGAGATGTGTTTCTCTTCCAGTTCGCATTAGCACTGAGCCCCGCTGCCTGCCTCAGGCTGCAGTGGGAGACTGAGCCATCTCTAACTCCTTCTGCTGCCCACGGCACATCTGTCCCACTTCCTGCCAAGTCTCTTTCCAAGGGACCACTCTGAGACCCTTCTAACCCCAATCCCTTCAGCCCCTCTCTCTGGCCAGGCCCCAGCATCCTGTGCTTGGACAACTGAAGAGGCTTCCTCCTTTGTTGTCCATCCTCCACTCCCACCCCCTCTTCATCCTCCATTAACCTCTGGAAGAATCATGAATCACCTTTGCTTAAATCCTCCCATAGCTTCCATGTCACTCACAGTAAAAGTTAATATTCTCACCATGGCCCACAGGCCTTACCCAGTCTATTTCCTGTTACCTCTCTCCTTTCATCTCCCACTCCTTTCCCCCTTGCTCATGTTGCTCCAGCCACATGGGCTTCCTTGGTGTTCCTTGAGCAGACAGACACCAGGGCTGTCACCTATGGTTGTTCATGGCATGAGGGCACCTGGCAGAGGATGTCAGTGGAGGACAAAACCCAGCCCTTGTTCTGTTCTCCAAGCCATGAGCCCTGGTTTGGGGTTGCCTCTGCTTAGAAGAAAGATTGTCTATTTCTTTTAAATATATAGATAGAAAAGACCTTTAGCATTCTTGCTTACTTGTTTCATTATCTGTTATTTTGGGATCTGTTTCTATTTACTGATTTTTCTCCTAGTTATGAGCTACAATTTTTGGTTCTTGGCCTGTCTAGGAATTTTTGATTGGATGCTGGACATTGTAAATGTTACACTATTGATGGTCTGGAATTGTGTTGTCTTCTGTTAAAGAGTGGCATGCAGTTAAATTACTTGCTAATTACTTTGATCATTTTGAGGCTTATTTTTAAGCTCTTTTAGGGTGGGTCCACAGTAGCCTTCACTTATGGGATAGTTCCTAACCTGTGTGACTTCTAGGAATTGTTCAAATTAAAATGCTTCAGTCTTTCTTTGCCTGGCCTCAGGGAATTTCACCCTACACACCTGAAGCCTTGCACATGGCAGTGATTCAAGAGGACACATGTAGATTTCTGGAGCTGTTTTTCTTCCTTCAGTCAGGTACTCTGCCCCTCAACTTACAGCCACCTAAGCCTACCTGAACTTTGTTCTTGGTCTCAAAGATCAACTCAGCAATACTGCTGGACTCTATTTGAATTTCCCCTCCCTGCACCTAAGATGCCTCCAGACAGAAAGCTGGGTGAACTGTAGAGCTAACTTGATTTGCTTACCTTTCTTCAGGGATCACTGTCTTATGCTACTGCCTGTTGTTCAATGTCTGCAAACAATTGTTTCCAATGTTTTGCCTAGTTTTTTTTTCTAATTTTCATAAAGCTCTTTATTAGTTAGTAGAGACATTGGGAGTCATGATCCCACCTTAGAGCCTTTGCACTTGGTTCCCTCTACCTGGAACGCTTCCCCCAGATATCCACGTGGCCAACTTGCTCACTTCACAAGTGCTCATGTTACCCTCTCAGTGAACCCTTCCCTAACCACCTGCTATGGACTGAATGTTTGCGTTTTCCCAAAAGTCAGGTGTTGAAGCCTTAATGCCCAGTGTAGTGGTATTTGGAAGTGGGCCTTTGGGAAGTGATTAGGTTTTGATGAGGTCATGAGGGTTAAGCCTCCATGATGGGATTAGTTCCCTTAAAAGAAGAGGAAGAGAGGACCAGATCCCTCTCTCTGTGTCATGTGAGGATACAGCAAGAAAGCTTTCATCTGCAAACTAGGAACAGGGCCCTCACCAGACACCAAATACGCTGGCACCTTGATCTTGGACTTCCCAGCCTCCAGAACGACGAAAAATAAATATTGCTTAAACCATCCAGTAGATGGTATTTTGTTATAGCAGCCTGAGATAAGATATCACTTTACTTAGAATTGAAACTACCTCAACTTGTAATGCCCCATTACCTTGTGTATTTCTCTCTATGTATATATTTACTGTCTATAAAATTAATTGCCTGTCTTCGTCCCCTAACCTCCTTCTGCTCTATACCTGTCTTTTTTCCATTAACATGGAAGCTTGATGAGGGCAGAGAATTTTGTCTGTTTATTCACTGCTGCATCCCCAGTGCACAGTGGGGATAGTTCGGCTTGACTGTGGGGCTCACAGGGATTTAAGTTGAGCAGCGTTTCTGTAGGTGCCCAACACATCCTGGAGCAACTGCTGGTGCTGGCTGAGGTTAGGATGGGGAAGGGGTAGAAAGGCCTGTTCAGGGCCTAAGCAGCTCACCATCCATTCACAGTTATGCTCAGAATCTCATTCTCTACCTACACCTACCACCTCTGACATAAGACAATGTCTGGCCTCCTTGCCCCAGCACAGGCTTCTTCCTCTGCCCAGAGTACAACTCCCTGGCTCAGCTATGTGGCACAGACACCTAGCTTCAGAGTCTCCACCTGTATGAAGTGTTCTGTGAATCTTGTGACTTCCAATCCCTTCTTCACTCTGGGACCAAGAAAATTCTTTCTAAATGCCTTATTCTATTCAGGCTTCTATAACAAATTACCATAGACTGGGTGGTTTACAAGCAACAAATATTTATTTCTCAAAGTTCTGGAGGCTGGGAAGTCCAAGGTCACAGCACCAGCAGATCTGGTGTCTGATGAAGGCTCTCTGGTCCATAGACAGTGCCTTTCAGCTGTGTCCTTACATGGTGCAAGGGCTGAGGAGTCTCTCTCAGGCCACTTTTTAAGAAAATCATTCATTTTTCTTTCCAACTTTTATTTTACATTCATGGGGTACATGTGCAGATTTGGTATATAGGTAAATTGCATGTCTCGGGGCATTAGTGTGCAGATTATTTTATTACCCAGGTAATAAGCATAGTACCTGATAGGTAGTTTTTCCATCATCACCCTCTTCCCACCCTCCACCCTCAAGTAGGCCTCTATGTTATTGCTCCCTTCTTTGTGTCCATGTGTACTCAATGTTTAGCTCCCACTTATAAGTGAGAAAATGCAGTATTTGGTTTTCTGCTCATGCATTAATTCACTTAGGATAATGGCCTCCAGCCCCATGTACGTTGCTGCAACGGACAAGATATTGTCCTTTTTTATGGCTGCATAGTATTCCATGGTGTATATTTACCACATTTTTCTTTATCTAGTCCACTGTTGATGGGCATTGAGGTTGATTCCAGGTCTTTGCTATTGTGAATAGTGCTATGATGAACATGTATGTGTCTTTATGATAGAATGATTTTATTCCTTTGGGTATATACCCAGTAATGGGATTGCTAGGTCAGATATTAGTTCTATTATAAGTTCTTTGAGAAATCTCCAAACTGCTCTCCACAGTGGCTGAACTAGTTTACATTCTCACCAGCAGTGTATAAGCATTCACTTTTCTCTGCAACCTCACCAGCATCTGTTATTTTTTGACTTTTTAATAATAGCCATTCTGCCCAGTGTGAGATGGTATTGCACCATGGTTTTGATTTCCATTTCTCTAATGATCAGTGATGTGGAACATTTTTTCATATGCTTGTTGGCCACATGTATGTCTTCTTTTAAGAAGTATCTGTTCATATCCTTTGCCCGTTTTTTAATGGACTTGTTTGTTTTTTTCCTCAGGCCCCTTTTACAACGGCACTAATCCCATTCATAAGAGTAGAGTCCTCATGACTTAATCATCCCCCAAGGGCCCCACCTCCTAATACCATCACCTGCAGATTAGGATTTCAACGTATGAATTTTGTGGGGGGACATAAACATTCAGACCATAGCACTAATCCCAGAACGTTCTATGTCATTTCCTCTCTCTAACGCCTTCCACTGCACCCCATTGTTCCTGTGAGAAATATCAGATTCCTCAAGTTGGTGTATCATCTTTTACAACATAACAACAAATTACGCCCATGCAATCAGCTTAACATGACAAAATCATTTTCTCACAGTTTCCGAGGTCAAAATTCTTTGAGCAGCCTGGTTGAGTGTTTCTGGCTCAGGTTTTCTCATGAGGTGTAGTCAGGCTGACAG'
    splitted = []

    prev = 0
    while True:
        n = np.random.randint(30, 50)
        splitted.append(input_string[prev:prev + n]+'\n')
        prev = prev + n
        if prev >= len(input_string) - 1:
            break
    input_file.writelines(splitted[:-1])
    input_file.close()


if __name__ == '__main__':
    acc_list = []
    EJ = EmbedJoin(threshold=15, num_of_embeddings=7, num_of_hash_func_in_LSH=5, length_of_LSH_sig=11)
    EJ.preprocessing1("input2")
    EJ.varification_pairs()
    for i in range(10):
        EJ.preprocessing2()
        EJ.run()
        # EJ.print_pairs(EJ.candidate_pairs)
        acc_list.append(EJ.accuracy())
    print("Acc = {}".format(mean(acc_list)))

    #
    # EJ.print_pairs(EJ.C)
